// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RadicalTherapy.Data;

namespace RadicalTherapy.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20220510061036_v2-11")]
    partial class v211
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RadicalTherapy.Data.model.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("auth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("endpoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("p256dh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("RadicalTherapy.Data.model.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Checked")
                        .HasColumnType("bit");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("subjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientID");

                    b.HasIndex("subjectId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("RadicalTherapy.Data.model.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Img")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("RadicalTherapy.Data.model.CustomerVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CustomerVideos");
                });

            modelBuilder.Entity("RadicalTherapy.Data.model.Data", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Data");
                });

            modelBuilder.Entity("RadicalTherapy.Data.model.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("q1")
                        .HasColumnType("int");

                    b.Property<int>("q10")
                        .HasColumnType("int");

                    b.Property<int>("q11")
                        .HasColumnType("int");

                    b.Property<int>("q12")
                        .HasColumnType("int");

                    b.Property<int>("q13")
                        .HasColumnType("int");

                    b.Property<int>("q14")
                        .HasColumnType("int");

                    b.Property<int>("q15")
                        .HasColumnType("int");

                    b.Property<int>("q16")
                        .HasColumnType("int");

                    b.Property<int>("q17")
                        .HasColumnType("int");

                    b.Property<int>("q18")
                        .HasColumnType("int");

                    b.Property<int>("q19")
                        .HasColumnType("int");

                    b.Property<int>("q2")
                        .HasColumnType("int");

                    b.Property<int>("q20")
                        .HasColumnType("int");

                    b.Property<int>("q21")
                        .HasColumnType("int");

                    b.Property<int>("q22")
                        .HasColumnType("int");

                    b.Property<int>("q23")
                        .HasColumnType("int");

                    b.Property<int>("q24")
                        .HasColumnType("int");

                    b.Property<int>("q25")
                        .HasColumnType("int");

                    b.Property<int>("q3")
                        .HasColumnType("int");

                    b.Property<int>("q4")
                        .HasColumnType("int");

                    b.Property<int>("q5")
                        .HasColumnType("int");

                    b.Property<int>("q6")
                        .HasColumnType("int");

                    b.Property<int>("q7")
                        .HasColumnType("int");

                    b.Property<int>("q8")
                        .HasColumnType("int");

                    b.Property<int>("q9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("RadicalTherapy.Data.model.RadicalReserve", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PayStatus")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Refid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegectionReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ReseptPic")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("RadicalReserves");
                });

            modelBuilder.Entity("RadicalTherapy.Data.model.Reserve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reserve");
                });

            modelBuilder.Entity("RadicalTherapy.Data.model.Statistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OS")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("datetime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("RadicalTherapy.Data.model.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("CoverPic")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("SmallText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("RadicalTherapy.Data.model.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UserNameType")
                        .HasColumnType("bit");

                    b.Property<string>("WhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RadicalTherapy.Data.model.Comment", b =>
                {
                    b.HasOne("RadicalTherapy.Data.model.Client", "Client")
                        .WithMany("Comments")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadicalTherapy.Data.model.Subject", "Subject")
                        .WithMany("Comments")
                        .HasForeignKey("subjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("RadicalTherapy.Data.model.Content", b =>
                {
                    b.HasOne("RadicalTherapy.Data.model.Subject", "Subject")
                        .WithMany("Contents")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("RadicalTherapy.Data.model.RadicalReserve", b =>
                {
                    b.HasOne("RadicalTherapy.Data.model.User", "User")
                        .WithMany("RadicalReserves")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RadicalTherapy.Data.model.Client", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("RadicalTherapy.Data.model.Subject", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Contents");
                });

            modelBuilder.Entity("RadicalTherapy.Data.model.User", b =>
                {
                    b.Navigation("RadicalReserves");
                });
#pragma warning restore 612, 618
        }
    }
}
